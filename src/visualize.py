import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st

def plot_price(df, ticker):
    plt.figure(figsize=(10, 5))
    plt.plot(df['Close'], label='Price')
    plt.title(f"{ticker.capitalize()} Price Over Time")
    plt.xlabel("Date")
    plt.ylabel("Price (USD)")
    plt.grid(True)
    plt.legend()
    plt.tight_layout()
    st.pyplot(plt)
    plt.clf()

def plot_daily_returns(df, ticker):
    plt.figure(figsize=(10, 5))
    sns.histplot(df['Daily Return'].dropna(), bins=100, kde=True)
    plt.title(f"{ticker.capitalize()} Daily Returns Distribution")
    plt.xlabel("Daily Return")
    plt.ylabel("Frequency")
    plt.tight_layout()
    st.pyplot(plt)
    plt.clf()

def plot_volatility(df, ticker):
    plt.figure(figsize=(10, 5))
    plt.plot(df['Rolling Volatility'], label='7-Day Rolling Volatility', color='orange')
    plt.title(f"{ticker.capitalize()} Rolling Volatility")
    plt.xlabel("Date")
    plt.ylabel("Volatility (Std Dev)")
    plt.grid(True)
    plt.legend()
    plt.tight_layout()
    st.pyplot(plt)
    plt.clf()
import matplotlib.pyplot as plt
import streamlit as st

def plot_actual_vs_predicted(dates, actual, predicted, title="Actual vs Predicted"):
    plt.figure(figsize=(10, 5))
    plt.plot(dates, actual, label="Actual", marker='o')
    plt.plot(dates, predicted, label="Predicted", linestyle="--", marker='x')
    plt.title(title)
    plt.xlabel("Date")
    plt.ylabel("Price (USD)")
    plt.xticks(rotation=45)
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    st.pyplot(plt)
    plt.clf()
def plot_future_forecast(dates, predicted, title="Next 7 Days Forecast"):
    plt.figure(figsize=(10, 5))
    plt.plot(dates, predicted, marker='o', linestyle='--', label='Forecast')
    plt.title(title)
    plt.xlabel("Future Date")
    plt.ylabel("Predicted Price (USD)")
    plt.xticks(rotation=45)
    plt.grid(True)
    plt.legend()
    plt.tight_layout()
    st.pyplot(plt)
    plt.clf()
def plot_moving_averages(df, ticker):
    plt.figure(figsize=(10, 5))
    plt.plot(df['Close'], label='Close Price')
    plt.plot(df['MA7'], label='MA 7')
    plt.plot(df['MA30'], label='MA 30')
    plt.title(f"{ticker.capitalize()} - Moving Averages")
    plt.xlabel("Date")
    plt.ylabel("Price (USD)")
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    st.pyplot(plt)
    plt.clf()

def plot_rsi(df, ticker):
    plt.figure(figsize=(10, 3))
    plt.plot(df['RSI'], label='RSI', color='purple')
    plt.axhline(70, linestyle='--', color='red', alpha=0.5)
    plt.axhline(30, linestyle='--', color='green', alpha=0.5)
    plt.title(f"{ticker.capitalize()} - RSI (14)")
    plt.xlabel("Date")
    plt.ylabel("RSI")
    plt.grid(True)
    plt.tight_layout()
    st.pyplot(plt)
    plt.clf()

def plot_macd(df, ticker):
    plt.figure(figsize=(10, 3))
    plt.plot(df['MACD'], label='MACD', color='blue')
    plt.plot(df['MACD Signal'], label='Signal', color='orange')
    plt.title(f"{ticker.capitalize()} - MACD")
    plt.xlabel("Date")
    plt.ylabel("MACD")
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    st.pyplot(plt)
    plt.clf()
